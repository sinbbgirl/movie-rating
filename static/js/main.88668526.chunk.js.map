{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","trailer","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","yt_trailer_code","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAgBeA,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,kBAAf,UACE,gJAIA,kE,gFCoDSC,MA1Df,YAAuE,IAAtDC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAejD,OAfoE,EAAXC,QAgBvD,qBAAKR,UAAU,QAAf,SACE,eAAC,IAAD,CACES,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLT,KACAC,OACAC,QACAC,UACAC,SACAC,WATN,UAaE,qBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BI,IAC7B,oBAAIJ,UAAU,aAAd,SAA4BG,IAC5B,oBAAIH,UAAU,eAAd,SACGO,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAIhB,UAAU,eAAd,SACGe,GAD+BC,QAKtC,oBAAGhB,UAAU,gBAAb,UAA8BK,EAAQY,MAAM,EAAG,KAA/C,SACA,gDAAQ,oDAAR,2BCaKC,G,kNAtDbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CACZN,SACAD,WAAW,IAVH,2C,kEAeVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKhB,MAA3BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASpB,UAAU,YAAnB,SACGmB,EACC,qBAAKnB,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGoB,EAAON,KAAI,SAACc,GACX,OACE,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,OACdC,QAASoB,EAAME,iBAPVF,EAAM1B,e,GArCV6B,c,MCOJC,MARf,WAEE,OACE,sBAAKhC,UAAU,+BAAf,UACE,eAAC,IAAD,CAAMS,GAAG,IAAT,UAAa,qBAAKG,IAAI,kBAAkBC,IAAI,QAA5C,UADF,WCcWoB,E,kLAlBS,IAAD,EACYN,KAAK9B,MAAzBqC,EADQ,EACRA,SAASC,EADD,EACCA,aACMC,IAAnBF,EAASvB,OACRwB,EAAQE,KAAK,KAEjBvC,QAAQC,IAAImC,K,+BAEN,IACCA,EAAYP,KAAK9B,MAAjBqC,SACP,OAAGA,EAASvB,MACD,+BAAOuB,EAASvB,MAAMP,QAEtB,S,GAbE2B,a,MCkBNO,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,cAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW7C,IAChC,cAAC,IAAD,CAAO2C,KAAK,aAAaE,UAAWR,QCX1CS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88668526.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about_container\">\r\n      <span>\r\n        ‚ÄúFreedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.‚Äù\r\n      </span>\r\n      <span>‚àí George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres, trailer }) {\r\n  // const temp = [];\r\n  // temp.push({ trailer });\r\n  // const trailerAvailable = temp.map((code) => {\r\n  //   if (code.trailer === \"\") {\r\n  //     return <p></p>;\r\n  //   } else {\r\n  //     let url = `https://youtu.be/${code.trailer}`;\r\n  //     return (\r\n  //       <a href={url} target='blank'>\r\n  //         üéû<span>Click to See Detail</span>üéû\r\n  //       </a>\r\n  //     );\r\n  //   }\r\n  // });\r\n  return (\r\n    <div className='movie'>\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            id,\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className='movie_data'>\r\n          <h3 className='movie_title'>{title}</h3>\r\n          <h5 className='movie_year'>{year}</h5>\r\n          <ul className='movie_genres'>\r\n            {genres.map((genre, index) => (\r\n              <li className='genres_genre' key={index}>\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className='movie_summary'>{summary.slice(0, 140)}...</p>\r\n          <span>üéû<b>Click to See Detail</b>üéû</span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({\r\n      movies,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className='container'>\r\n        {isLoading ? (\r\n          <div className='loader'>\r\n            <span className='loader_text'>Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className='movies'>\r\n            {movies.map((movie) => {\r\n              return (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                  trailer={movie.yt_trailer_code}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Navigation.css'\r\n\r\nfunction Navigation() {\r\n  const logoPath = '../public/OFUS_logo.png'\r\n  return (\r\n    <nav className='navbar navbar-light bg-light'>\r\n      <Link to='/'><img src='./OFUS_logo.png' alt='why'/>Home</Link>    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\n\r\nclass Detail extends Component {\r\n    componentDidMount(){\r\n        const {location,history} = this.props\r\n        if(location.state === undefined){\r\n            history.push('/')\r\n        }\r\n        console.log(location)\r\n    }\r\n    render() {    \r\n        const {location} = this.props  \r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        } else {\r\n            return null\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from './components/Navigation'\r\nimport Detail from './routes/Detail'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation/>\r\n      <Route path='/' exact={true} component={Home} />\r\n      <Route path='/about' component={About} />\r\n      <Route path='/movie/:id' component={Detail} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}